#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import re

def fix_navigation():
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    with open('js/piano-keyboard.js', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # 1. –ò–°–ü–†–ê–í–õ–Ø–ï–ú findNoteInPitchMap
    old_find_method = r'findNoteInPitchMap\(currentTime, direction\) \{.*?return null;\s*\}'
    
    new_find_method = '''findNoteInPitchMap(currentTime, direction) {
        const notes = this.pitchMap.notes;
        
        if (!notes || notes.length === 0) {
            console.warn('‚ö†Ô∏è –ü–∏—Ç—á-–∫–∞—Ä—Ç–∞ –ø—É—Å—Ç–∞!');
            return null;
        }

        console.log(`üîç –ü–æ–∏—Å–∫ –Ω–æ—Ç—ã: –≤—Ä–µ–º—è=${currentTime.toFixed(2)}—Å, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ=${direction === 1 ? '–≤–ø–µ—Ä–µ–¥' : '–Ω–∞–∑–∞–¥'}, –≤—Å–µ–≥–æ –Ω–æ—Ç=${notes.length}`);
        
        if (direction === 1) {
            // –í–ü–ï–†–ï–î - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–Ω–¥–µ–∫—Å–Ω—ã–π –ø–æ–∏—Å–∫
            let currentIndex = this.pitchMap.currentIndex || 0;
            
            // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–∞–π–¥–µ–º –±–ª–∏–∂–∞–π—à–∏–π –∫ —Ç–µ–∫—É—â–µ–º—É –≤—Ä–µ–º–µ–Ω–∏
            if (currentIndex === 0 || this.pitchMap.currentIndex === undefined) {
                for (let i = 0; i < notes.length; i++) {
                    if (notes[i].time >= currentTime) {
                        currentIndex = i;
                        break;
                    }
                }
            }
            
            // –ò—â–µ–º —Å–ª–µ–¥—É—é—â—É—é –Ω–æ—Ç—É
            let nextIndex = currentIndex + 1;
            if (nextIndex >= notes.length) {
                nextIndex = notes.length - 1;
                console.log(`üîö –î–æ—Å—Ç–∏–≥–Ω—É—Ç –∫–æ–Ω–µ—Ü –∫–∞—Ä—Ç—ã, –æ—Å—Ç–∞–µ–º—Å—è –Ω–∞ –Ω–æ—Ç–µ ${nextIndex}`);
            }
            
            this.pitchMap.currentIndex = nextIndex;
            const foundNote = notes[nextIndex];
            console.log(`‚û°Ô∏è –ù–∞–π–¥–µ–Ω–∞ –Ω–æ—Ç–∞ –≤–ø–µ—Ä–µ–¥: ${foundNote.keyId} –≤ ${foundNote.time.toFixed(2)}—Å (–∏–Ω–¥–µ–∫—Å ${nextIndex})`);
            return foundNote;
            
        } else {
            // –ù–ê–ó–ê–î - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–Ω–¥–µ–∫—Å–Ω—ã–π –ø–æ–∏—Å–∫
            let currentIndex = this.pitchMap.currentIndex || 0;
            
            // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–∞–π–¥–µ–º –±–ª–∏–∂–∞–π—à–∏–π –∫ —Ç–µ–∫—É—â–µ–º—É –≤—Ä–µ–º–µ–Ω–∏
            if (currentIndex === 0 || this.pitchMap.currentIndex === undefined) {
                for (let i = notes.length - 1; i >= 0; i--) {
                    if (notes[i].time <= currentTime) {
                        currentIndex = i;
                        break;
                    }
                }
            }
            
            // –ò—â–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –Ω–æ—Ç—É
            let prevIndex = currentIndex - 1;
            if (prevIndex < 0) {
                prevIndex = 0;
                console.log(`üîö –î–æ—Å—Ç–∏–≥–Ω—É—Ç–æ –Ω–∞—á–∞–ª–æ –∫–∞—Ä—Ç—ã, –æ—Å—Ç–∞–µ–º—Å—è –Ω–∞ –Ω–æ—Ç–µ 0`);
            }
            
            this.pitchMap.currentIndex = prevIndex;
            const foundNote = notes[prevIndex];
            console.log(`‚¨ÖÔ∏è –ù–∞–π–¥–µ–Ω–∞ –Ω–æ—Ç–∞ –Ω–∞–∑–∞–¥: ${foundNote.keyId} –≤ ${foundNote.time.toFixed(2)}—Å (–∏–Ω–¥–µ–∫—Å ${prevIndex})`);
            return foundNote;
        }
        
        return null;
    }'''
    
    content = re.sub(old_find_method, new_find_method, content, flags=re.DOTALL)
    
    # 2. –î–û–ë–ê–í–õ–Ø–ï–ú protectedFromUpdate –≤ simulateNoteFromPitchMap
    old_simulate = r'(this\.currentActiveNote\.protectedFromCleanup = true;)'
    new_simulate = r'\1\n            this.currentActiveNote.protectedFromUpdate = true; // –ó–ê–©–ò–¢–ê –û–¢ –û–ë–ù–û–í–õ–ï–ù–ò–ô\n            // –§–ò–ö–°–ò–†–£–ï–ú –î–õ–ò–¢–ï–õ–¨–ù–û–°–¢–¨ - –ù–ï –ü–û–ó–í–û–õ–Ø–ï–ú –ï–ô –†–ê–°–¢–ò\n            this.currentActiveNote.lastDetection = this.currentActiveNote.startTime;'
    
    content = re.sub(old_simulate, new_simulate, content)
    
    # 3. –£–°–ò–õ–ò–í–ê–ï–ú –ó–ê–©–ò–¢–£ –≤ updateExistingNote
    old_update_check = r'(if \(noteData\.isSimulated \|\| noteData\.fromPitchMap \|\| noteData\.protectedFromCleanup\) \{)'
    new_update_check = r'if (noteData.isSimulated || noteData.fromPitchMap || noteData.protectedFromCleanup || noteData.protectedFromUpdate) {'
    
    content = re.sub(old_update_check, new_update_check, content)
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
    with open('js/piano-keyboard.js', 'w', encoding='utf-8') as f:
        f.write(content)
    
    print('‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!')

if __name__ == '__main__':
    fix_navigation() 