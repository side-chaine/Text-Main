---
description: 
globs: 
alwaysApply: false
---
# Генеральный План Реализации beLive: AI-Powered Sync Editor v1.0

**Миссия:** Интегрировать в `Sync Editor` масштабируемую, отказоустойчивую и готовую к оффлайн-работе систему генерации AI-видеоконтента, обеспечивая бесшовную интеграцию в экосистему `beLive` и превосходный пользовательский опыт.

## Раздел 1: Фундаментальные Архитектурные Принципы (Четыре Столпа)

1. **Принцип Единого Шлюза (`The Gateway Principle`):**
   - Вся коммуникация с платформой `beLive` (API, события, аутентификация) проходит **исключительно** через `beLive-integration-gateway.js`. Шлюз отвечает за API-версионирование, управление фича-флагами и имеет механизм отката (fallback) в полный оффлайн-режим.

2. **Принцип Единого Источника Правды (`The Single Source of Truth Principle`):**
   - Бэкенд `beLive` — источник истины. `IndexedDB` — оффлайн-кэш. `DataSyncManager` реализует **версионирование (`version`, `lastModified`) и стратегию разрешения конфликтов "Last-Write-Wins"** для всех данных.

3. **Принцип Разделения Генерации и Дистрибуции (`The CDN-First Principle`):**
   - Сгенерированный контент **немедленно** загружается на CDN (поддерживая чанковую загрузку для больших файлов). В системе используются только **защищенные и версионированные CDN-URL**.

4. **Принцип Декомпозиции и Событий (`The Decoupling & EventBus Principle`):**
   - Внутренние модули независимы и общаются через `eventBus`. Новая логика создается в **новых, изолированных модулях**, не затрагивая ядро существующего редактора.

## Раздел 2: Финальный Архитектурный Проект (Blueprint Модулей)

* **`js/core/` (Ядро)**:
    * `event-bus.js`: Локальная шина событий.
    * `beLive-integration-gateway.js`: Шлюз к платформе.
    * `data-sync-manager.js`: Управляет синхронизацией и оффлайн-очередью.
    * `cache-manager.js`: Управляет `IndexedDB`, очищая кэш по возрасту, размеру и типу пользователя.

* **`js/services/` (Сервисы)**:
    * `cdn-manager.js`: Управляет загрузкой на CDN.
    * `scene-manager.js`: Управляет визуальными слоями.
    * `telemetry.js`: Централизованный сбор и отправка метрик (включая FPS) и логов в Sentry.

* **`js/ai/` (Искусственный Интеллект)**:
    * `ai-director-state.js`: Хранилище AI-настроек с историей изменений для `undo/redo`.
    * `ai-client-factory.js`: Фабрика для создания AI-клиентов.
    * `ai-providers-config.js`: Конфигурация AI-провайдеров.
    * `ai-abstract-client.js`: Базовый класс для AI-клиентов, реализующий паттерн **Circuit Breaker** и методы `cancelGeneration`, `getMetrics`.
    * `ai-mock-client.js`: Клиент-заглушка.

* **`js/ui/` (Пользовательский Интерфейс)**:
    * `ui-ai-director.js`: Управляет новым AI-интерфейсом, ленивой инициализацией и валидацией токенов.

## Раздел 3: Ключевые Процессы и Улучшения

1. **AI-Генерация:**
    * **Пре-генерация:** Автоматическая фоновая генерация первых 2-х секторов (с возможностью приоритизации по рейтингу) для мгновенного отклика.
    * **Отказоустойчивость:** Паттерн `Circuit Breaker` в AI-клиентах предотвращает каскадные сбои. При ошибках генерации активируется `Fallback-механизм`.

2. **Управление данными**:
    * **Синхронизация:** `DataSyncManager` обрабатывает оффлайн-изменения и разрешает конфликты при восстановлении сети.
    * **Кэширование:** `CacheManager` обеспечивает оптимальное использование дискового пространства на устройстве клиента.

3. **Пользовательский опыт**:
    * `AIDirectorState` с историей изменений позволяет реализовать `undo/redo`.
    * UI будет отображать детальный статус генерации (ожидание, загрузка, готово, ошибка) на каждом секторе.

## Раздел 4: Качество, Операции и Развертывание

1. **Тестирование:** В CI/CD пайплайн будут интегрированы:
    * **E2E-тесты (Cypress/Playwright)** для ключевых пользовательских сценариев.
    * **Юнит-тесты (Jest)** с высоким покрытием для `core` и `services` модулей.

2. **Мониторинг**:
    * `Telemetry` модуль будет отправлять критические ошибки в Sentry.
    * `Gateway` будет выполнять **heartbeat-пинги** к API платформы для проверки доступности и автоматического переключения в оффлайн-режим.

3. **Развертывание**:
    * Новый функционал будет выкатываться поэтапно с помощью **фича-флагов**, управляемых через `Gateway`.
    * Будет подготовлен скрипт для **миграции legacy-данных** при первом запуске новой версии.

---

**Заключение**

Этот план — результат нашей общей работы. Он учитывает все нюансы и готов к воплощению.

**Объявляю Четвертый Круг — "Фаза Реализации" — открытым.**
**Заключение**

Этот план — результат нашей общей работы. Он учитывает все нюансы и готов к воплощению.

**Объявляю Четвертый Круг — "Фаза Реализации" — открытым.**