# Context7 Integration для beLive

Этот файл настраивает оптимальное использование Context7 для разработки проекта beLive. Правила помогают эффективно использовать возможности AI-ассистента для ускорения разработки.

## Предварительная загрузка контекста

Перед началом работы над функцией следует загрузить в Context7:

1. **Документация целевой библиотеки**
   ```javascript
   // Пример: Для работы с Web Audio API
   // Загружаем спецификацию и примеры кода
   const audioCtx = new AudioContext();
   const analyser = audioCtx.createAnalyser();
   ```

2. **Актуальные примеры использования**
   ```javascript
   // Например, для интеграции wavesurfer.js:
   const wavesurfer = WaveSurfer.create({
     container: '#waveform',
     waveColor: '#4F4A85',
     progressColor: '#383351',
     plugins: [
       RegionsPlugin.create(),
       TimelinePlugin.create()
     ]
   });
   ```

## Шаблоны для типовых задач

### RTF-обработка
```javascript
// Шаблон для работы с RTF в Web Worker
function processRtfInWorker(rtfContent) {
  return new Promise((resolve, reject) => {
    const worker = new Worker('js/rtf-worker.js');
    worker.onmessage = (e) => resolve(e.data);
    worker.onerror = reject;
    worker.postMessage({ text: rtfContent });
  });
}
```

### Audio Processing
```javascript
// Шаблон для изменения BPM без искажений
function timeStretch(audioBuffer, rate) {
  // SoundTouch или RubberBand реализация
  const stretcher = new SoundTouch();
  stretcher.tempo = rate;
  // Дальнейшая обработка
}
```

### Face Detection
```javascript
// Шаблон для распознавания лица
async function setupFaceDetection(videoElement) {
  await faceapi.nets.tinyFaceDetector.loadFromUri('/models');
  await faceapi.nets.faceLandmark68Net.loadFromUri('/models');
  
  return faceapi.detectAllFaces(videoElement, 
    new faceapi.TinyFaceDetectorOptions())
    .withFaceLandmarks();
}
```

## Workflow интеграция

При работе над функциями roadmap.mdc, интегрировать Context7 следующим образом:

1. **Перед началом работы:**
   - Загрузить заголовки соответствующих файлов проекта
   - Изучить документацию выбранной библиотеки
   - Сформировать план интеграции

2. **Во время разработки:**
   - Использовать контекстуальные подсказки для оптимизации кода
   - Проверять совместимость с существующим API проекта
   - Генерировать JSDoc для новых методов

3. **После реализации:**
   - Предложить тестовые сценарии
   - Выявить потенциальные конфликты
   - Обновить статус задачи в roadmap.mdc

## Специфика библиотек

### Web Audio и WebGL 
Оптимальные паттерны для высокопроизводительных операций:

```javascript
// WebAudio оптимизация 
function optimizedAudioProcessing() {
  // 1. Предварительная аллокация буферов
  const buffer = new Float32Array(1024);
  
  // 2. Использование AudioWorklet для тяжелых операций
  audioContext.audioWorklet.addModule('processors.js');
  
  // 3. Оптимизация цикла обработки
  function process() {
    // Минимизировать создание объектов
    requestAnimationFrame(process);
  }
}
```

```javascript
// WebGL оптимизация
function optimizedVideoEffects() {
  // 1. Переиспользование буферов и текстур
  const frameBuffer = gl.createFramebuffer();
  
  // 2. Предварительная компиляция шейдеров
  const program = compileShaderProgram(gl, vertexShader, fragmentShader);
  
  // 3. Оптимальный рендеринг
  function render() {
    // Минимизировать state changes
    requestAnimationFrame(render);
  }
}
```

## Context7 для работы с существующим кодом

1. **Анализ зависимостей:**
   - Исследование взаимосвязей между модулями
   - Выявление нераскрытого потенциала и багов
   - Предложения по рефакторингу

2. **Интеграция новых библиотек:**
   - Оценка совместимости
   - Создание адаптеров для существующего API
   - Подготовка полноценных примеров использования

3. **База знаний для повторного использования:**
   - Коллекция шаблонов для типовых задач
   - Решения часто встречающихся проблем
   - Библиотека типовых визуальных компонентов

## Применение для приоритетных задач 

### Анимации текста:
```javascript
// GSAP для продвинутых анимаций текста
function setupTextAnimations() {
  gsap.registerPlugin(SplitText);
  
  const lyrics = document.querySelector('.lyrics-container');
  const split = new SplitText(lyrics, {type:"words,chars"});
  
  return {
    animateIn: (line) => {
      gsap.from(split.chars, {
        opacity: 0, 
        y: 20,
        stagger: 0.02,
        duration: 0.5,
        ease: "back.out"
      });
    },
    
    highlight: (word) => {
      gsap.to(word, {
        color: "#ffcc00",
        scale: 1.1,
        duration: 0.3,
        yoyo: true,
        repeat: 1
      });
    }
  };
}
```

### LoopBlock:
```javascript
// WaveSurfer.js для LoopBlock
function setupWaveform() {
  const wavesurfer = WaveSurfer.create({
    container: '#waveform',
    waveColor: '#4F4A85',
    progressColor: '#383351',
    plugins: [
      WaveSurfer.regions.create(),
      WaveSurfer.timeline.create()
    ]
  });
  
  return {
    loadAudio: (url) => wavesurfer.load(url),
    
    createLoop: (start, end) => {
      const region = wavesurfer.addRegion({
        start, 
        end,
        color: 'rgba(255, 0, 0, 0.2)'
      });
      
      return {
        play: () => {
          wavesurfer.play(start);
          wavesurfer.once('audioprocess', (time) => {
            if (time >= end) {
              wavesurfer.play(start);
            }
          });
        },
        setRate: (rate) => wavesurfer.setPlaybackRate(rate)
      };
    }
  };
}
```

## Инструкция по применению Context7

1. При начале работы над новой задачей из roadmap.mdc:
   ```
   // Пример подготовки контекста для задачи "Расширенный набор анимаций текста"
   ```

2. Для получения рекомендаций по оптимальной реализации:
   ```
   // Какая наиболее эффективная библиотека для [текущая задача] с учетом современных веб-стандартов?
   ```

3. Для быстрого прототипирования решения:
   ```
   // Создай прототип для задачи "[название задачи]" из roadmap.mdc
   ```

4. Для проверки совместимости с существующим кодом:
   ```
   // Проверь совместимость [новый код] с существующей реализацией в [целевой файл]
   ```

Всегда помни о специфике проекта beLive и его архитектурных особенностях при использовании Context7. Фокусируйся на производительности и удобстве пользователя. 