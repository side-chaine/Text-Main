#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import re

def fix_navigation_boundaries():
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    with open('js/piano-keyboard.js', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –º–µ—Ç–æ–¥ findNoteInPitchMap —Å –≥—Ä–∞–Ω–∏—Ü–∞–º–∏
    old_method = r'findNoteInPitchMap\(currentTime, direction\) \{.*?return null;\s*\}'
    
    new_method = '''findNoteInPitchMap(currentTime, direction) {
        const notes = this.pitchMap.notes;
        
        if (!notes || notes.length === 0) {
            console.warn('‚ö†Ô∏è –ü–∏—Ç—á-–∫–∞—Ä—Ç–∞ –ø—É—Å—Ç–∞!');
            return null;
        }

        console.log(`üîç –ü–æ–∏—Å–∫ –Ω–æ—Ç—ã: –≤—Ä–µ–º—è=${currentTime.toFixed(2)}—Å, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ=${direction === 1 ? '–≤–ø–µ—Ä–µ–¥' : '–Ω–∞–∑–∞–¥'}, –≤—Å–µ–≥–æ –Ω–æ—Ç=${notes.length}`);
        
        // –£–°–¢–ê–ù–ê–í–õ–ò–í–ê–ï–ú –ì–†–ê–ù–ò–¶–´ –ù–ê–í–ò–ì–ê–¶–ò–ò
        const firstNote = notes[0];
        const lastNote = notes[notes.length - 1];
        
        if (direction === 1) {
            // –í–ü–ï–†–ï–î - –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –∫–æ–Ω—Ü–∞
            let currentIndex = this.pitchMap.currentIndex || 0;
            
            // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–∞–π–¥–µ–º –±–ª–∏–∂–∞–π—à–∏–π –∫ —Ç–µ–∫—É—â–µ–º—É –≤—Ä–µ–º–µ–Ω–∏
            if (currentIndex === 0 || this.pitchMap.currentIndex === undefined) {
                for (let i = 0; i < notes.length; i++) {
                    if (notes[i].time >= currentTime) {
                        currentIndex = i;
                        break;
                    }
                }
            }
            
            // –ò—â–µ–º —Å–ª–µ–¥—É—é—â—É—é –Ω–æ—Ç—É
            let nextIndex = currentIndex + 1;
            if (nextIndex >= notes.length) {
                // –î–û–°–¢–ò–ì–õ–ò –ö–û–ù–¶–ê –¢–†–ï–ö–ê - –ë–õ–û–ö–ò–†–£–ï–ú –î–ê–õ–¨–ù–ï–ô–®–£–Æ –ù–ê–í–ò–ì–ê–¶–ò–Æ
                console.log(`üîö –ö–û–ù–ï–¶ –¢–†–ï–ö–ê: –æ—Å—Ç–∞–µ–º—Å—è –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –Ω–æ—Ç–µ ${lastNote.keyId} (${lastNote.time.toFixed(2)}—Å)`);
                this.pitchMap.currentIndex = notes.length - 1;
                return lastNote;
            }
            
            this.pitchMap.currentIndex = nextIndex;
            const foundNote = notes[nextIndex];
            console.log(`‚û°Ô∏è –ù–∞–π–¥–µ–Ω–∞ –Ω–æ—Ç–∞ –≤–ø–µ—Ä–µ–¥: ${foundNote.keyId} –≤ ${foundNote.time.toFixed(2)}—Å (–∏–Ω–¥–µ–∫—Å ${nextIndex}/${notes.length})`);
            return foundNote;
            
        } else {
            // –ù–ê–ó–ê–î - –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –Ω–∞—á–∞–ª–∞
            let currentIndex = this.pitchMap.currentIndex || 0;
            
            // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–∞–π–¥–µ–º –±–ª–∏–∂–∞–π—à–∏–π –∫ —Ç–µ–∫—É—â–µ–º—É –≤—Ä–µ–º–µ–Ω–∏
            if (currentIndex === 0 || this.pitchMap.currentIndex === undefined) {
                for (let i = notes.length - 1; i >= 0; i--) {
                    if (notes[i].time <= currentTime) {
                        currentIndex = i;
                        break;
                    }
                }
            }
            
            // –ò—â–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –Ω–æ—Ç—É
            let prevIndex = currentIndex - 1;
            if (prevIndex < 0) {
                // –î–û–°–¢–ò–ì–õ–ò –ù–ê–ß–ê–õ–ê –¢–†–ï–ö–ê - –ë–õ–û–ö–ò–†–£–ï–ú –î–ê–õ–¨–ù–ï–ô–®–£–Æ –ù–ê–í–ò–ì–ê–¶–ò–Æ
                console.log(`üîö –ù–ê–ß–ê–õ–û –¢–†–ï–ö–ê: –æ—Å—Ç–∞–µ–º—Å—è –Ω–∞ –ø–µ—Ä–≤–æ–π –Ω–æ—Ç–µ ${firstNote.keyId} (${firstNote.time.toFixed(2)}—Å)`);
                this.pitchMap.currentIndex = 0;
                return firstNote;
            }
            
            this.pitchMap.currentIndex = prevIndex;
            const foundNote = notes[prevIndex];
            console.log(`‚¨ÖÔ∏è –ù–∞–π–¥–µ–Ω–∞ –Ω–æ—Ç–∞ –Ω–∞–∑–∞–¥: ${foundNote.keyId} –≤ ${foundNote.time.toFixed(2)}—Å (–∏–Ω–¥–µ–∫—Å ${prevIndex}/${notes.length})`);
            return foundNote;
        }
        
        return null;
    }'''
    
    content = re.sub(old_method, new_method, content, flags=re.DOTALL)
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–∫—Ç–∞–≤–Ω—ã–µ —Å–∫–∞—á–∫–∏ - —Å–º—è–≥—á–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
    old_octave_method = r'isHarmonicJump\(newFrequency, currentNote\) \{.*?return false;\s*\}'
    
    new_octave_method = '''isHarmonicJump(newFrequency, currentNote) {
        if (!currentNote) return false;
        
        const currentFreq = currentNote.currentFrequency;
        const ratio = newFrequency / currentFreq;
        const noteDuration = performance.now() - currentNote.startTime;
        
        // üéØ –°–ú–Ø–ì–ß–ï–ù–ù–´–ï –ö–†–ò–¢–ï–†–ò–ò: —Ä–∞–∑—Ä–µ—à–∞–µ–º –±–æ–ª—å—à–µ –æ–∫—Ç–∞–≤–Ω—ã—Ö –ø–µ—Ä–µ—Ö–æ–¥–æ–≤
        const isOctaveRatio = (
            Math.abs(ratio - 2.0) < 0.08 ||    // –û–∫—Ç–∞–≤–∞ –≤–≤–µ—Ä—Ö (—É–≤–µ–ª–∏—á–µ–Ω–∞ —Ç–æ–ª–µ—Ä–∞–Ω—Ç–Ω–æ—Å—Ç—å)
            Math.abs(ratio - 0.5) < 0.04 ||    // –û–∫—Ç–∞–≤–∞ –≤–Ω–∏–∑ (—É–≤–µ–ª–∏—á–µ–Ω–∞ —Ç–æ–ª–µ—Ä–∞–Ω—Ç–Ω–æ—Å—Ç—å)
            Math.abs(ratio - 4.0) < 0.15 ||    // –î–≤–µ –æ–∫—Ç–∞–≤—ã –≤–≤–µ—Ä—Ö
            Math.abs(ratio - 0.25) < 0.08      // –î–≤–µ –æ–∫—Ç–∞–≤—ã –≤–Ω–∏–∑
        );
        
        // –ë–ª–æ–∫–∏—Ä—É–µ–º –æ–∫—Ç–∞–≤–Ω—ã–µ —Å–∫–∞—á–∫–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –û–ß–ï–ù–¨ –∫–æ—Ä–æ—Ç–∫–∏—Ö –Ω–æ—Ç (–º–µ–Ω–µ–µ 40–º—Å)
        if (isOctaveRatio && noteDuration < 40) {
            console.log(`üö´ –û–∫—Ç–∞–≤–Ω—ã–π —Å–∫–∞—á–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω: ${currentFreq.toFixed(1)}Hz ‚Üí ${newFrequency.toFixed(1)}Hz –∑–∞ ${noteDuration.toFixed(0)}–º—Å (ratio: ${ratio.toFixed(2)})`);
            this.detectionStats.harmonicsRejected++;
            return true;
        }
        
        // –†–ê–ó–†–ï–®–ê–ï–ú –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–ª—É—á–∞–∏
        if (isOctaveRatio) {
            console.log(`‚úÖ –û–∫—Ç–∞–≤–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ —Ä–∞–∑—Ä–µ—à–µ–Ω: ${currentFreq.toFixed(1)}Hz ‚Üí ${newFrequency.toFixed(1)}Hz –∑–∞ ${noteDuration.toFixed(0)}–º—Å (ratio: ${ratio.toFixed(2)})`);
        }
        
        return false;
    }'''
    
    content = re.sub(old_octave_method, new_octave_method, content, flags=re.DOTALL)
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
    with open('js/piano-keyboard.js', 'w', encoding='utf-8') as f:
        f.write(content)
    
    print('‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è —Å –≥—Ä–∞–Ω–∏—Ü–∞–º–∏ –∏ –æ–∫—Ç–∞–≤–Ω—ã–µ —Å–∫–∞—á–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!')

if __name__ == '__main__':
    fix_navigation_boundaries() 